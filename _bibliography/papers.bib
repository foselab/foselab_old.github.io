% Encoding: UTF-8
---
---

@string{aps = {American Physical Society,}}
@conference{
	10446_54540,
	author = {Gargantini, Angelo Michele and Terzi, Fabio and Zambelli, Matteo and Bonfanti, Silvia},
	title = {A Low-cost Virtual Reality Game for Amblyopia Rehabilitation},
	year = {2015},
	publisher = {Association for Computing Machinery},
	volume = {01-02-},
	booktitle = {Proceedings of the 3rd 2015 Workshop on ICTs for improving Patients Rehabilitation Research Techniques},
	keywords = {Amblyopia; Android; Cardboard; Mobile games; Rehabiliation;},
	doi = {10.1145/2838944.2838964},
	isbn = {9781450338981},	
	pages = {81--84}
}
@conference{
	10446_50043,
	author = {Bonfanti, Silvia and Gargantini, Angelo Michele and Vitali, Andrea},
	title = {A mobile application for the stereo acuity test},
	year = {2015},
	publisher = {Springer},
	volume = {9185},
	booktitle = {Digital Human Modeling - Applications in Health, Safety, Ergonomics and Risk Management: Ergonomics and Health - 6th International Conference, DHM 2015, Held as Part of HCI International 2015, Los Angeles, CA, USA, August 2-7, 2015, Proceedings, Part II},
	doi = {10.1007/978-3-319-21070-4_32},
	isbn = {978-3-319-21069-8},	
	pages = {315--326}
}
@conference{
	10446_50079,
	author = {Arcaini, Paolo and Bonfanti, Silvia and Gargantini, Angelo Michele and Mashkoor, Atif and Riccobene, Elvinia},
	title = {Formal validation and verification of a medical software critical component},
	year = {2015},
	publisher = {IEEE},
	booktitle = {Formal Methods and Models for Codesign (MEMOCODE), 2015 ACM/IEEE International Conference on},
	doi = {10.1109/MEMCOD.2015.7340473},
	isbn = {978-1-5090-0237-5},	
	pages = {80--89}
}
@conference{
	10446_77085,
	author = {Bonfanti, Silvia and Gargantini, Angelo Michele and Mashkoor, Atif},
	title = {A preliminary systematic literature review of the use of formal methods in medical software systems},
	year = {2016},
	publisher = {Whitebox},
	booktitle = {Industrial Proceedings of the 23rd European & Asian System, Software & Service Process Improvement & Innovation (EuroAsiaSPI2 2016)},
	isbn = {978-87-998116-6-3},	
	pages = {9.15--9.23}
}
@conference{
	10446_75661,
	author = {Arcaini, Paolo and Bonfanti, Silvia and Gargantini, Angelo Michele and Riccobene, Elvinia},
	title = {How to assure correctness and safety of medical software: The hemodialysis machine case study},
	year = {2016},
	publisher = {Springer},
	address = {Cham},
	volume = {9675},
	booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and Z. 5th International Conference, ABZ 2016, Linz, Austria, May 23-27, 2016, Proceedings},
	doi = {10.1007/978-3-319-33600-8_30},
	isbn = {978-3-319-33599-5},	
	pages = {344--359}
}
@conference{
	10446_75666,
	author = {Arcaini, Paolo and Bonfanti, Silvia and Dausend, Marcel and Gargantini, Angelo Michele and Mashkoor, Atif and Raschke, Alexander and Riccobene, Elvinia and Scandurra, Patrizia and Stegmaier, Michael},
	title = {Unified syntax for abstract state machines},
	year = {2016},
	publisher = {Springer},
	volume = {9675},
	booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and Z. 5th International Conference, ABZ 2016, Linz, Austria, May 23-27, 2016, Proceedings},
	doi = {10.1007/978-3-319-33600-8_14},
	isbn = {978-3-319-33599-5},	
	pages = {231--236}
}
@conference{
	10446_76960,
	author = {Arcaini, Paolo and Bonfanti, Silvia and Gargantini, Angelo Michele and Riccobene, Elvinia},
	title = {Visual Notation and Patterns for Abstract State Machines},
	year = {2016},
	publisher = {Springer},
	address = {Heidelberg},
	volume = {9946},
	booktitle = {Software Technologies: Applications and Foundations: STAF 2016 Collocated Workshops: DataMod, GCM, HOFM, MELO, SEMS, VeryComp, Vienna Austria, July 4-8, 2016 Revised Selected Papers},
	doi = {10.1007/978-3-319-50230-4_12},
	isbn = {978-3-319-50230-4},	
	pages = {163--178}
}
@conference{
	10446_116192,
	author = {Bonfanti, Silvia and Gargantini, Angelo Michele},
	title = {Amblyopia Rehabilitation by Games for Low-Cost Virtual Reality Visors},
	year = {2017},
	publisher = {Springer},
	address = {Cham},
	volume = {665},
	booktitle = {ICTs for Improving Patients Rehabilitation Research Techniques. Third International Workshop, REHAB 2015, Lisbon, Portugal, October 1-2, 2015, Revised Selected Papers},
	doi = {10.1007/978-3-319-69694-2_11},
	isbn = {978-3-319-69694-2},	
	pages = {116--125}
}
@conference{
	10446_91705,
	author = {Bonfanti, Silvia and Carissoni, Marco and Gargantini, Angelo Michele and Mashkoor, Atif},
	title = {Asm2C++: A tool for code generation from abstract state machines to Arduino},
	year = {2017},
	publisher = {Springer},
	address = {Heidelberg},
	volume = {10227},
	booktitle = {NASA Formal Methods. 9th International Symposium, NFM 2017, Moffett Field, CA, USA, May 16-18, 2017, Proceedings},
	doi = {10.1007/978-3-319-57288-8_21},
	isbn = {9783319572871},	
	pages = {295--301}
}
@conference{
	10446_110665,
	author = {Bonfanti, Silvia and Centurelli, Valentina and Riccobene, Elvinia and Scandurra, Patrizia},
	title = {The female contribution in architecting a set of tools for a formal method. Role of women in Software Architecture},
	year = {2017},
	publisher = {ACM (Association for Computing Machinery)},
	address = {New York},
	volume = {Volume Part F130530},
	booktitle = {ECSA 2017: 11th European Conference on Software Architecture. Companion Volume},
	doi = {10.1145/3129790.3129823},
	isbn = {978-1-4503-5217-8},	
	pages = {12--15}
}
@conference{
	10446_124776,
	author = {Bonfanti, Silvia and Gargantini, Angelo Michele and Mashkoor, Atif},
	title = {AsmetaA: Animator for abstract state machines},
	year = {2018},
	publisher = {Springer},
	address = {Cham},
	volume = {10817},
	booktitle = {ABZ 2018: Abstract State Machines, Alloy, B, TLA, VDM, and Z: 6th International Conference, ABZ 2018, Southampton, UK, June 5–8, 2018, Proceedings},
	doi = {10.1007/978-3-319-91271-4_25},
	isbn = {9783319912707},	
	pages = {369--373}
}
@article{
	10446_123805,
	author = {Bonfanti, Silvia and Gargantini, Angelo Michele and Mashkoor, Atif},
	title = {A systematic literature review of the use of formal methods in medical software systems},
	year = {2018},
	journal = {JOURNAL OF SOFTWARE MAINTENANCE AND EVOLUTION: RESEARCH AND PRACTICE},
	volume = {30},
	doi = {10.1002/smr.1943},
	pages = {1--18},
	number = {5 (art. n. e1943)}
}
@conference{
	10446_134329,
	author = {Esposito, Gabriele and Facchin, Alessio and Maffioletti, MARTA NICOLE and Maffioletti, Silvio and Gargantini, Angelo Michele and Bonfanti, Silvia and Bonsignore, Francesco and Nucci, Paolo},
	title = {Behind optical factors in anisometropic aniseiconia},
	year = {2018},
	booktitle = {European Conference on Visual Perception 2017: Abstract Book},
	pages = {151--151}
}
@conference{
	10446_131419,
	author = {Bonfanti, Silvia and Gargantini, Angelo Michele and Mashkoor, Atif},
	title = {Generation of behavior-driven development C++ tests from abstract state machine scenarios},
	year = {2018},
	publisher = {Springer},
	address = {Cham},
	volume = {929},
	booktitle = {New Trends in Model and Data Engineering. MEDI 2018 International Workshops, DETECT, MEDI4SG, IWCFS, REMEDY, Marrakesh, Morocco, October 24–26, 2018, Proceedings},
	doi = {10.1007/978-3-030-02852-7_13},
	isbn = {978-3-030-02852-7},	
	pages = {146--152}
}
@conference{
	10446_126416,
	author = {Bonfanti, Silvia and Gargantini, Angelo Michele and Mashkoor, Atif},
	title = {Generation of C++ Unit Tests from Abstract State Machines Specifications},
	year = {2018},
	publisher = {IEEE (Institute of Electric and Electronics Engineers)},
	address = {Los Alamitos},
	booktitle = {2018 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)},
	doi = {10.1109/ICSTW.2018.00049},
	isbn = {978-1-5386-6352-3},	
	pages = {185--193}
}
@article{
	10446_110677,
	author = {Arcaini, Paolo and Bonfanti, Silvia and Gargantini, Angelo Michele and Mashkoor, Atif and Riccobene, Elvinia},
	title = {Integrating formal methods into medical software development: The ASM approach},
	year = {2018},
	journal = {SCIENCE OF COMPUTER PROGRAMMING},
	volume = {158},
	doi = {10.1016/j.scico.2017.07.003},
	pages = {148--167}
}
@inbook{
	10446_131512,
	author = {Bonfanti, Silvia and Gargantini, Angelo Michele},
	title = {Stereo Digital Displays for Diagnosis and Treatment of Amblyopia},
	year = {2018},
	publisher = {Nova Biomedical},
	booktitle = {Advances in Health and Disease. Vol. 8},
	isbn = {978-1-53614-415-4},	
	pages = {229--249}
}
@conference{
	10446_131417,
	author = {Bonfanti, Silvia and Gargantini, Angelo Michele and Mashkoor, Atif},
	title = {Validation of transformation from abstract state machine models to C++ code},
	year = {2018},
	publisher = {Springer},
	address = {Cham},
	volume = {11146},
	booktitle = {Testing Software and Systems. 30th IFIP WG 6.1 International Conference, ICTSS 2018, Cádiz, Spain, October 1-3, 2018, Proceedings},
	doi = {10.1007/978-3-319-99927-2_2},
	isbn = {978-3-319-99927-2},	
	pages = {17--32}
}
@conference{
	10446_150840,
	author = {Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo Michele and Radavelli, Marco and Duan, Feng and Lei, Yu},
	title = {Combining Model Refinement and Test Generation for Conformance Testing of the IEEE PHD Protocol Using Abstract State Machines},
	year = {2019},
	publisher = {Springer},
	address = {Cham},
	volume = {11812},
	booktitle = {Testing Software and Systems: 31st IFIP WG 6.1 International Conference, ICTSS 2019, Paris, France, October 15–17, 2019, Proceedings},
	doi = {10.1007/978-3-030-31280-0_5},
	url = {https://doi.org/10.1007/978-3-030-31280-0_5},
	html = {https://doi.org/10.1007/978-3-030-31280-0_5},
	isbn = {978-3-030-31279-4},	
	pages = {67--85},
	organization ={IFIP Working Group 6.1}
}
@conference{
	10446_150814,
	author = {Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo Michele},
	title = {Developing Medical Devices from Abstract State Machines to Embedded Systems: A Smart Pill Box Case Study},
	year = {2019},
	publisher = {Springer Nature},
	address = {Cham},
	volume = {11771},
	booktitle = {Software Technology: Methods and Tools: 51st International Conference, TOOLS 2019, Innopolis, Russia, October 15–17, 2019, Proceedings},
	doi = {10.1007/978-3-030-29852-4_7},
	url = {https://doi.org/10.1007/978-3-030-29852-4_7},
	html = {https://doi.org/10.1007/978-3-030-29852-4_7},
	isbn = {978-3-030-29851-7},	
	pages = {89--103}
}
@conference{
	10446_164546,
	author = {Arcaini, Paolo and Bonfanti, Silvia and Gargantini, Angelo Michele and Riccobene, Elvinia and Scandurra, Patrizia},
	title = {Addressing usability in a formal development environment},
	year = {2020},
	publisher = {Springer},
	address = {Cham},
	volume = {12232},
	booktitle = {Formal Methods. FM 2019 International Workshops},
	doi = {10.1007/978-3-030-54994-7_6},
	isbn = {978-3-030-54993-0},	
	pages = {61--76}
}
@conference{
	10446_164544,
	author = {Arcaini, Paolo and Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo Michele},
	title = {Dealing with Robustness of Convolutional Neural Networks for Image Classification},
	year = {2020},
	publisher = {IEEE},
	address = {Piscataway},
	booktitle = {2020 IEEE International Conference On Artificial Intelligence Testing (AITest)},
	doi = {10.1109/AITEST49225.2020.00009},
	url = {https://doi.org/10.1109/AITEST49225.2020.00009},
	html = {https://doi.org/10.1109/AITEST49225.2020.00009},
	isbn = {978-1-7281-6984-2},	
	pages = {7--14},
	organization ={IEEE}
}
@article{
	10446_150836,
	author = {Bonfanti, Silvia and Gargantini, Angelo Michele and Mashkoor, A.},
	title = {Design and validation of a C++ code generator from Abstract State Machines specifications},
	year = {2020},
	journal = {JOURNAL OF SOFTWARE},
	volume = {32},
	doi = {10.1002/smr.2205},
	pages = {1--25},
	number = {2 (art. e2205)}
}
@conference{
	10446_164542,
	author = {Arcaini, Paolo and Bonfanti, Silvia and Gargantini, Angelo Michele and Riccobene, Elvinia and Scandurra, Patrizia},
	title = {Modelling an Automotive Software-Intensive System with Adaptive Features Using ASMETA},
	year = {2020},
	publisher = {Springer Nature Switzerland},
	address = {Cham},
	volume = {12071},
	booktitle = {Rigorous State-Based Methods},
	doi = {10.1007/978-3-030-48077-6_25},
	isbn = {978-3-030-48076-9},	
	pages = {302--317}
}
@conference{
	10446_190932,
	author = {Bonfanti, Silvia and Riccobene, Elvinia and Scandurra, Patrizia},
	title = {A Runtime Safety Enforcement Approach by Monitoring and Adaptation},
	year = {2021},
	publisher = {Springer Nature},
	address = {Cham},
	volume = {12857},
	booktitle = {Software Architecture, 15th European Conference, ECSA 2021, Virtual Event, Sweden, September 13-17, 2021, Proceedings},
	doi = {10.1007/978-3-030-86044-8_2},
	isbn = {978-3-030-86043-1},	
	pages = {20--36}
}
@conference{
	10446_176598,
	author = {Gargantini, Angelo Michele and Bonfanti, Silvia},
	title = {Comparison of Algorithms to Measure a Psychophysical Threshold using Digital Applications: The Stereoacuity Case Study},
	year = {2021},
	publisher = {Science and Technology Publications},
	address = {Setúbal},
	booktitle = {Proceedings of the 14th International Joint Conference on Biomedical Engineering Systems and Technologies. Volume 5: HEALTHINF},
	doi = {10.5220/0010204000780086},
	isbn = {978-989-758-490-9},	
	pages = {78--86}
}
@conference{
	10446_197122,
	author = {Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo Michele and Riccobene, Elvinia},
	title = {Developing a Prototype of a Mechanical Ventilator Controller from Requirements to Code with ASMETA},
	year = {2021},
	publisher = {Open Publishing Association},
	journal = {ELECTRONIC PROCEEDINGS IN THEORETICAL COMPUTER SCIENCE},
	volume = {349},
	booktitle = {Proceedings First Workshop on Applicable Formal Methods},
	doi = {10.4204/EPTCS.349.2},
	pages = {13--29},
	url = {https://doi.org/10.4204/EPTCS.349.2},
	html = {https://doi.org/10.4204/EPTCS.349.2},
	number = {http://about.eptcs.org/}
}
@conference{
	10446_197120,
	author = {Arcaini, Paolo and Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo Michele},
	title = {Efficient Computation of Robustness of Convolutional Neural Networks},
	year = {2021},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	address = {Piscataway},
	booktitle = {IEEE International Conference on Artificial Intelligence Testing (AITest)},
	doi = {10.1109/AITEST52744.2021.00015},
	url = {https://doi.org/10.1109/AITEST52744.2021.00015},
	html = {https://doi.org/10.1109/AITEST52744.2021.00015},
	isbn = {978-1-6654-3481-2},	
	pages = {21--28}
}
@article{
	10446_181058,
	author = {Bonfanti, Silvia and Gargantini, Angelo Michele and Esposito, Gabriele and Facchin, Alessio and Maffioletti, Marta and Maffioletti, Silvio},
	title = {Evaluation of stereoacuity with a digital mobile application},
	year = {2021},
	journal = {GRAEFE'S ARCHIVE FOR CLINICAL AND EXPERIMENTAL OPHTHALMOLOGY},
	volume = {259},
	doi = {10.1007/s00417-021-05195-z},
	pages = {2843--2848},
	number = {9}
}
@conference{
	10446_185264,
	author = {Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo Michele and Riccobene, Elvinia},
	title = {Extending ASMETA with Time Features},
	year = {2021},
	publisher = {Springer},
	address = {Cham},
	volume = {12709},
	booktitle = {Rigorous State-Based Methods},
	doi = {10.1007/978-3-030-77543-8_8},
	url = {https://doi.org/10.1007/978-3-030-77543-8_8},
	html = {https://doi.org/10.1007/978-3-030-77543-8_8},
	isbn = {978-3-030-77542-1},	
	pages = {105--111}
}
@article{
	10446_202112,
	author = {Bonfanti, Silvia and Bombarda, Andrea and Gargantini, Angelo Michele and Riccobene, Elvinia and Pelliccione, Patrizio},
	title = {Il successo di MVM, un progetto social e internazionale per realizzare un ventilatore polmonare},
	year = {2021},
	journal = {IL GIORNALE DELL'INGEGNERE},
	pages = {13--13},
	number = {5}
}
@conference{
	10446_202108,
	author = {Bombarda, Andrea and Bonfanti, Silvia and Galbiati, Cristiano and Gargantini, Angelo Michele and Pelliccione, Patrizio and Riccobene, Elvinia and Wada, Masayuki},
	title = {Lessons Learned from the Development of a Mechanical Ventilator for COVID-19},
	year = {2021},
	publisher = {IEEE (Institute of Electrical and Electronics Engineers)},
	address = {Piscataway},
	booktitle = {Proceedings: 2021 IEEE 32nd International Symposium on Software Reliability Engineering. ISSRE 2021},
	doi = {10.1109/ISSRE52982.2021.00016},
	url = {https://doi.org/10.1109/ISSRE52982.2021.00016},
	html = {https://doi.org/10.1109/ISSRE52982.2021.00016},
	isbn = {978-1-6654-2587-2},	
	pages = {24--35}
}
@conference{
	10446_184998,
	author = {Arcaini, Paolo and Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo Michele},
	title = {ROBY: A Tool for Robustness Analysis of Neural Network Classifiers},
	year = {2021},
	publisher = {IEEE (Institute of Electrical and Electronics Engineers)},
	address = {Piscataway},
	booktitle = {International Conference on Software Testing, Verification, and Validation, ICST},
	doi = {10.1109/ICST49551.2021.00057},	
	url = {https://doi.org/10.1109/ICST49551.2021.00057},
	html = {https://doi.org/10.1109/ICST49551.2021.00057},
	isbn = {978-1-7281-6836-4},	
	pages = {442--447},
	organization ={Cesar},
	organization ={Facebook},
	organization ={Opus Software}
}
@inbook{
	10446_184707,
	author = {Arcaini, Paolo and Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo Michele and Riccobene, Elvinia and Scandurra, Patrizia},
	title = {The ASMETA Approach to Safety Assurance of Software Systems},
	year = {2021},
	publisher = {Springer},
	address = {Cham},
	volume = {12750},
	booktitle = {Logic, Computation and Rigorous Methods. Essays Dedicated to Egon Börger on the Occasion of His 75th Birthday},
	doi = {10.1007/978-3-030-76020-5_13},
	isbn = {978-3-030-76019-9},	
	url = {https://doi.org/10.1007/978-3-030-76020-5_13},
	html = {https://doi.org/10.1007/978-3-030-76020-5_13},
	pages = {215--238}
}
@article{
	10446_177978,
	author = {Abba, A. and Accorsi, C. and Agnes, P. and Alessi, E. and Amaudruz, P. and Annovi, A. and Desages, F. Ardellier and Back, S. and Badia, C. and Bagger, J. and Basile, V. and Batignani, G. and Bayo, A. and Bell, B. and Beschi, M. and Biagini, D. and Bianchi, G. and Bicelli, S. and Bishop, D. and Boccali, T. and Bombarda, Andrea and Bonfanti, Silvia and Bonivento, W. M. and Bouchard, M. and Breviario, M. and Brice, S. and Brown, R. and Calvo-Mozota, J. M. and Camozzi, L. and Camozzi, M. and Capra, A. and Caravati, M. and Carlini, M. and Ceccanti, A. and Celano, B. and Cela Ruiz, J. M. and Charette, C. and Cogliati, G. and Constable, M. and Crippa, C. and Croci, G. and Cudmore, S. and Dahl, C. E. and Dal Molin, A. and Daley, M. and Di Guardo, C. and D'Avenio, G. and Davignon, O. and Del Tutto, M. and De Ruiter, J. and Devoto, A. and Diaz Gomez Maqueo, P. and Di Francesco, F. and Dossi, M. and Druszkiewicz, E. and Duma, C. and Elliott, E. and Farina, D. and Fernandes, C. and Ferroni, F. and Finocchiaro, G. and Fiorillo, G. and Ford, R. and Foti, G. and Fournier, R. D. and Franco, D. and Fricbergs, C. and Gabriele, F. and Galbiati, C. and Garcia Abia, P. and Gargantini, Angelo Michele and Giacomelli, L. and Giacomini, F. and Giacomini, F. and Giarratana, L. S. and Gillespie, S. and Giorgi, D. and Girma, T. and Gobui, R. and Goeldi, D. and Golf, F. and Gorel, P. and Gorini, G. and Gramellini, E. and Grosso, G. and Guescini, F. and Guetre, E. and Hackman, G. and Hadden, T. and Hawkins, W. and Hayashi, K. and Heavey, A. and Hersak, G. and Hessey, N. and Hockin, G. and Hudson, K. and Ianni, A. and Ienzi, C. and Ippolito, V. and James, C. C. and Jillings, C. and Kendziora, C. and Khan, S. and Kim, E. and King, M. and King, S. and Kittmer, A. and Kochanek, I. and Kowalkowski, J. and Krücken, R. and Kushoro, M. and Kuula, S. and Laclaustra, M. and Leblond, G. and Lee, L. and Lennarz, A. and Leyton, M. and Li, X. and Liimatainen, P. and Lim, C. and Lindner, T. and Lomonaco, T. and Lu, P. and Lubna, R. and Lukhanin, G. A. and Luzón, G. and Macdonald, M. and Magni, G. and Maharaj, R. and Manni, S. and Mapelli, C. and Margetak, P. and Martin, L. and Martin, S. and Martínez, M. and Massacret, N. and Mcclurg, P. and Mcdonald, A. B. and Meazzi, E. and Migalla, R. and Mohayai, T. and Tosatti, L. M. and Monzani, G. and Moretti, C. and Morrison, B. and Mountaniol, M. and Muraro, A. and Napoli, P. and Nati, F. and Natzke, C. R. and Noble, A. J. and Norrick, A. and Olchanski, K. and Ortiz de Solorzano, A. and Padula, F. and Pallavicini, M. and Palumbo, I. and Panontin, E. and Papini, N. and Parmeggiano, L. and Parmeggiano, S. and Patel, K. and Patel, A. and Paterno, M. and Pellegrino, C. and Pelliccione, P. and Pesudo, V. and Pocar, A. and Pope, A. and Pordes, S. and Prelz, F. and Putignano, O. and Raaf, J. L. and Ratti, C. and Razeti, M. and Razeto, A. and Reed, D. and Refsgaard, J. and Reilly, T. and Renshaw, A. and Retriere, F. and Riccobene, E. and Rigamonti, D. and Rizzi, A. and Rode, J. and Romualdez, J. and Russel, L. and Sablone, D. and Sala, S. and Salomoni, D. and Salvo, P. and Sandoval, A. and Sansoucy, E. and Santorelli, R. and Savarese, C. and Scapparone, E. and Schaubel, T. and Scorza, S. and Settimo, M. and Shaw, B. and Shawyer, S. and Sher, A. and Shi, A. and Skensved, P. and Slutsky, A. and Smith, B. and Smith, N. J. T. and Stenzler, A. and Straubel, C. and Stringari, P. and Suchenek, M. and Sur, B. and Tacchino, S. and Takeuchi, L. and Tardocchi, M. and Tartaglia, R. and Thomas, E. and Trask, D. and Tseng, J. and Tseng, L. and Vanpagee, L. and Vedia, V. and Velghe, B. and Viel, S. and Visioli, A. and Viviani, L. and Vonica, D. and Wada, M. and Walter, D. and Wang, H. and Wang, M. H. L. S. and Westerdale, S. and Wood, D. and Yates, D. and Yue, S. and Zambrano, V.},
	title = {The novel Mechanical Ventilator Milano for the COVID-19 pandemic},
	year = {2021},
	journal = {PHYSICS OF FLUIDS},
	volume = {33},
	doi = {10.1063/5.0044445},
	pages = {1--11},
	number = {3 (art. 037122)}
}
@conference{
	10446_202114,
	author = {Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo Michele},
	title = {Automatic test generation with ASMETA for the Mechanical Ventilator Milano controller},
	year = {2022},
	publisher = {Springer},
	address = {Cham},
	volume = {13045},
	booktitle = {Testing Software and Systems. ICTSS 2021},
	doi = {10.1007/978-3-031-04673-5_5},
	url = {https://doi.org/10.1007/978-3-031-04673-5_5},
	html = {https://doi.org/10.1007/978-3-031-04673-5_5},
	isbn = {978-3-031-04672-8},	
	pages = {65--72},
	abstract  = {This paper presents an automatic test cases generation method from Abstract State Machine specifications. Starting from the ASMETA specification, the proposed approach applies the following steps: 1. Generation of abstract tests from a ASMETA model; 2. Optimization of the abstract tests; 3. Concretization of the abstract tests in GoogleTest; 4. Execution of the concrete tests on  code. We have applied this approach to the Mechanical Ventilator Milano (MVM) project, which our research group has contributed to develop, test, and certify during the Covid-19 pandemic.},
}
@conference{
	10446_235471,
	author = {Bonfanti, Silvia and Gargantini, Angelo Michele and Riccobene, Elvinia and Scandurra, Patrizia},
	title = {Compositional Simulation of Abstract State Machines for Safety Critical Systems},
	year = {2022},
	publisher = {Springer Science and Business Media Deutschland GmbH},
	address = {Heidelberg},
	volume = {13712},
	booktitle = {Formal Aspects of Component Software. 18th International Conference, FACS 2022. Virtual Event, November 10–11, 2022. Proceedings},
	doi = {10.1007/978-3-031-20872-0_1},
	isbn = {978-3-031-20871-3},	
	pages = {3--19}
}
@conference{
	10446_240549,
	author = {Bonfanti, Silvia and Gargantini, Angelo Michele},
	title = {Evaluation of Algorithms to Measure a Psychophysical Threshold Using Digital Applications},
	year = {2022},
	publisher = {Springer},
	address = {Cham},
	volume = {1710},
	booktitle = {Biomedical Engineering Systems and Technologies: 14th International Joint Conference, BIOSTEC 2021, Virtual Event, February 11–13, 2021, Revised Selected Papers},
	doi = {10.1007/978-3-031-20664-1_8},
	isbn = {978-3-031-20663-4},	
	pages = {139--157}
}
@article{
	10446_228131,
	author = {Bombarda, Andrea and Bonfanti, Silvia and Galbiati, Cristiano and Gargantini, Angelo Michele and Pelliccione, Patrizio and Riccobene, Elvinia and Wada, Masayuki},
	title = {Guidelines for the development of a critical software under emergency},
	year = {2022},
	journal = {INFORMATION AND SOFTWARE TECHNOLOGY},
	volume = {152},
	doi = {10.1016/j.infsof.2022.107061},
	url = {https://doi.org/10.1016/j.infsof.2022.107061},
	html = {https://doi.org/10.1016/j.infsof.2022.107061},
	pages = {107061--107080},
	number = {Art. n. 107061},
	abstract  = {Context:
During the first wave of the COVID-19 pandemic, an international and heterogeneous team of scientists collaborated on a social project to produce a mechanical ventilator for intensive care units (MVM). MVM has been conceived to be produced and used also in poor countries: it is open-source, no patents, cheap, and can be produced with materials that are easy to retrieve.

Objective:
The objective of this work is to extract from the experience of the MVM development and software certification a set of lessons learned and then guidelines that can help developers to produce safety-critical devices in similar emergency situations.

Method:
We conducted a case study. We had full access to source code, comments on code, change requests, test reports, every deliverable (60 in total) produced for the software certification (safety concepts, requirements specifications, architecture and design, testing activities, etc.), notes, whiteboard sketches, emails, etc. We validated both lessons learned and guidelines with experts.

Findings:
We contribute a set of validated lessons learned and a set of validated guidelines, together with a discussion of benefits and risks of each guideline.

Conclusion:
In this work we share our experience in certifying software for healthcare devices produced under emergency, i.e. with strict and pressing time constraints and with the difficulty of establishing a heterogeneous development team made of volunteers. We believe that the guidelines will help engineers during the development of critical software under emergency.},
}
@conference{
	10446_222608,
	author = {Arcaini, Paolo and Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo Michele and Gamba, Daniele and Pedercini, Rita},
	title = {Robustness assessment and improvement of a neural network for blood oxygen pressure estimation},
	year = {2022},
	publisher = {IEEE},
	address = {Piscataway},
	booktitle = {2022 IEEE Conference on Software Testing, Verification and Validation (ICST)},
	doi = {10.1109/ICST53961.2022.00040},
	url = {https://doi.org/10.1109/ICST53961.2022.00040},
	html = {https://doi.org/10.1109/ICST53961.2022.00040},
	isbn = {978-1-6654-6679-0},	
	pages = {312--322},
	organization ={IEEE}
}
@conference{
	10446_235451,
	author = {Bombarda, Andrea and Bonfanti, Silvia and De Sanctis, Martina and Gargantini, Angelo Michele and Pelliccione, Patrizio and Riccobene, Elvinia and Scandurra, Patrizia},
	title = {Towards an Evaluation Framework for Autonomous Systems},
	year = {2022},
	publisher = {IEEE (Institute of Electric and Electronics Engineers)},
	address = {Piscataway},
	booktitle = {2022 IEEE International Conference on Autonomic Computing and Self-Organizing Systems Companion (ACSOS-C)},
	doi = {10.1109/ACSOSC56246.2022.00025},
	url = {https://doi.org/10.1109/ACSOSC56246.2022.00025},
	html = {https://doi.org/10.1109/ACSOSC56246.2022.00025},
	isbn = {978-1-6654-5142-0},	
	pages = {43--48}
}
@article{
	10446_235472,
	author = {Bonfanti, Silvia and Riccobene, Elvinia and Scandurra, Patrizia},
	title = {A component framework for the runtime enforcement of safety properties},
	year = {2023},
	journal = {THE JOURNAL OF SYSTEMS AND SOFTWARE},
	volume = {198},
	doi = {10.1016/j.jss.2022.111605},
	pages = {1--46},
	number = {art. 111605}
}
@conference{
	10446_250709,
	author = {Bonfanti, Silvia and Riccobene, Elvinia and Santandrea, Davide and Scandurra, Patrizia},
	title = {Modeling the MVM-Adapt System by Compositional I/O Abstract State Machines},
	year = {2023},
	publisher = {Springer Nature Switzerland AG},
	address = {Cham},
	volume = {14010},
	booktitle = {Rigorous State-Based Methods. 9th International Conference, ABZ 2023, Nancy, France, May 30–June 2, 2023, Proceedings},
	doi = {10.1007/978-3-031-33163-3_8},
	isbn = {978-3-031-33162-6},	
	pages = {107--115}
}
@article{
	10446_235470,
	author = {Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo Michele and Lei, Yu and Duan, Feng},
	title = {RATE: A model-based testing approach that combines model refinement and test execution},
	year = {2023},
	journal = {SOFTWARE TESTING VERIFICATION & RELIABILITY},
	volume = {33},
	doi = {10.1002/stvr.1835},
	url = {https://doi.org/10.1002/stvr.1835},
	html = {https://doi.org/10.1002/stvr.1835},
	pages = {1--34},
	number = {2 (art. e1835)},
	abstract  = {In this paper, we present an approach to conformance testing based on abstract state machines (ASMs) that combines model refinement and test execution (RATE) and its application to three case studies. The RATE approach consists in generating test sequences from ASMs and checking the conformance between code and models in multiple iterations. The process follows these steps: (1) model the system as an abstract state machine; (2) validate and verify the model; (3) generate test sequences automatically from the ASM model; (4) execute the tests over the implementation and compute the code coverage; (5) if the coverage is below the desired threshold, then refine the abstract state machine model to add the uncovered functionalities and return to step 2. We have applied the proposed approach in three case studies: a traffic light control system (TLCS), the IEEE 11073-20601 personal health device (PHD) protocol, and the mechanical ventilator Milano (MVM). By applying RATE, at each refinement level, we have increased code coverage and identified some faults or conformance errors for all the case studies. The fault detection capability of RATE has also been confirmed by mutation analysis, in which we have highlighted that, many mutants can be killed even by the most abstract models.},
}
@conference{Bombarda2020,
	author    = {Andrea Bombarda and Angelo Gargantini},
	title     = {An Automata-Based Generation Method for Combinatorial Sequence Testing of Finite State Machines},
	booktitle = {2020 {IEEE} International Conference on Software Testing, Verification and Validation Workshops ({ICSTW})},
	year      = {2020},
	month     = {oct},
	publisher = {{IEEE}},
	abstract  = {Combinatorial Interaction Testing has been applied to event-driven software systems by using as test suite a set of sequences of inputs in desired combinations. This is generally called combinatorial sequence testing (CST). CST requires possibly new system models from which tests are generated and new test generation methods (or an adaptation of the classical ones). Finite State Machines (FSMs) can easily represent event-based systems where certain inputs are valid only in some states and such constraints can be represented by the incompleteness of the FSM. In this paper, we propose an approach to CST where tests are generated from FSMs which are represented by automata together with test requirements. First, automata can be used to check if test sequences contain invalid inputs. We propose three methods to repair tests with invalid inputs. Moreover, we can directly embed into automata the system constraints over the inputs during generations, to generate only valid test sequences. We compare our automata-based method with the standard approach of Sequences Covering Arrays (SCAs) that produces a set of sequences, all with the same length, composed by the permutation of all the events supported by the system. We found that generating only valid tests from automata provides several advantages iv.r.t. repairing tests and SCAs.},
	doi       = {10.1109/icstw50294.2020.00036},
	url	  = {https://doi.org/10.1109/icstw50294.2020.00036},
	html	  = {https://doi.org/10.1109/icstw50294.2020.00036},
}
@conference{Bombarda2021,
  	author    = {Andrea Bombarda and Edoardo Crippa and Angelo Gargantini},
  	title     = {An environment for benchmarking combinatorial test suite generators},
  	booktitle = {2021 {IEEE} International Conference on Software Testing, Verification and Validation Workshops ({ICSTW})},
  	year      = {2021},
  	month     = {apr},
  	publisher = {{IEEE}},
  	abstract  = {New tools for combinatorial test generation are proposed every year. However, different generators may have different performances on different models, in terms of the number of tests produced and generation time, so the choice of which generator has to be used can be challenging. Classical comparison between CIT generators considers only the number of tests composing the test suite. Still, especially when the time dedicated to testing activity is limited, generation time can be determinant. Thus, we propose a benchmarking framework including 1) a set of generic benchmark models, 2) an interface to easily integrate new generators, 3) methods to benchmark each generator against the others and to check validity and completeness. We have tested the proposed environment using five different generators (ACTS, CAgen, CASA, Medici, and PICT), comparing the obtained results in terms of the number of test cases and generation times, errors, completeness, and validity. Finally, we propose a CIT competition, between combinatorial generators, based on our framework.},
  	doi       = {10.1109/icstw52544.2021.00021},
	url      = {https://doi.org/10.1109/icstw55395.2022.00027},
	html      = {https://doi.org/10.1109/icstw55395.2022.00027},
}
@conference{Bombarda2022a,
	author    = {Andrea Bombarda and Angelo Gargantini},
	title     = {Parallel Test Generation for Combinatorial Models Based on Multivalued Decision Diagrams},
	booktitle = {2022 {IEEE} International Conference on Software Testing, Verification and Validation Workshops ({ICSTW})},
	year      = {2022},
	month     = {apr},
	publisher = {{IEEE}},
	abstract  = {Combinatorial interaction testing (CIT) is a testing technique that has proved to be effective in finding faults due to the interaction among inputs, and in reducing the number of test cases. One of the most crucial parts of combinatorial testing is the test generation for which many tools and algorithms have been proposed in recent years, with different methodologies and performances. However, generating tests remains a complex procedure that can require a lot of effort (mainly time). Thus, in this paper, we present the tool pMEDICI which aims to reduce the test generation time by parallelizing the generation process and exploiting the recent multithread hardware architectures. It uses Multivalued Decision Diagrams (MDDs) for representing the constraints and the tuples to be tested and extracts from them the t-wise test cases. Our experiments confirm that our tool requires a shorter amount of time for generating combinatorial test suites, especially for complex models, with a lot of parameters and constraints.},
	doi       = {10.1109/icstw55395.2022.00027},
	url	  = {https://doi.org/10.1109/icstw55395.2022.00027},
	html	  = {https://doi.org/10.1109/icstw55395.2022.00027},
}
@conference{Bombarda2023a,
        author    = {Andrea Bombarda and Angelo Gargantini},
  	title     = {Incremental generation of combinatorial test suites starting from existing seed tests},
  	booktitle = {2023 {IEEE} International Conference on Software Testing, Verification and Validation Workshops ({ICSTW})},
  	year      = {2023},
  	month     = {apr},
  	publisher = {{IEEE}},
  	url = {https://doi.org/10.1109/ICSTW58534.2023.00044},
	html = {https://doi.org/10.1109/ICSTW58534.2023.00044},
  	doi = {10.1109/ICSTW58534.2023.00044},
  	abstract  = {Many researchers have been focusing on building combinatorial test generators having the best possible performances, in terms of smaller test suites and shorter generation times. The majority of tools generates test suites from scratch. This means that when the test suite must be regenerated, the old tests are discarded and a new test suite is built. However, there are many cases in which old test cases, possibly written by hand, need to be (or could be) included in the final test suite, and the test suite completed with new tests in order to reach the desired level of combinatorial coverage. These existing tests that are reused are generally called \emph{seed tests}. Seed tests could be important for testing domain-specific critical parts of the system, or they could represent old test suites that must be enriched to reach the desired (possibly higher) strength of coverage. In this paper, we propose a new architecture for incremental test generation that starts from existing test seeds. This new architecture is supported by the pMEDICI+ tool which extends our previous effort done for pMEDICI. We evaluate the proposed approach on the benchmarks given in the context of the second edition of the CT-Competition and w.r.t. two application scenarios. For each scenario, we automatically generate seed tests and then we apply pMEDICI+ to obtain the desired test suite. The experiments highlight that using incremental test generation can contribute significantly in the reduction of test generation time and, in many cases, in the reduction of the test suite size.},
}
@conference{Bombarda2023b,
	author="Bombarda, Andrea
		and Bonfanti, Silvia
		and Gargantini, Angelo",
	editor="Gl{\"a}sser, Uwe
		and Creissac Campos, Jose
		and M{\'e}ry, Dominique
		and Palanque, Philippe",
	title="Formal {MVC}: A Pattern for the Integration of ASM Specifications in UI Development",
	booktitle="Rigorous State-Based Methods",
	year="2023",
	publisher="Springer Nature Switzerland",
	address="Cham",
	pages="340--357",
	abstract="Using architectural patterns is of paramount importance for guaranteeing the correct functionality, maintainability and modularity, especially for complex software systems. The model-view-controller (MVC) pattern is typically used in user interfaces (UIs), since it allows the separation between the internal representation of the information and the way it is shown to users. The main problem of using this approach in a formal setting, where formal models are used to specify the requirements and prove safety properties, is that those models are not directly used within the MVC pattern and, thus, all the activities performed at model-level are somehow lost when implementing the UI. For this reason, in this paper, we present the formal MVC pattern (fMVC), an extension of the classical MVC where the model is a formal specification, written using Abstract State Machines. This pattern is supported by the AsmetaFMVCLib, which allows the user to link the formal model with the view and the controller by using simple Java annotations. We present the application of fMVC on a simple example of a calculator for explanatory purposes, then we apply it to the AMAN case study, which has inspired the definition of fMVC. We discuss the advantages of fMVC and its shortcomings, trying to identify the scenarios where it should be applied and possible alternatives.",
	isbn="978-3-031-33163-3",
	doi="10.1007/978-3-031-33163-3_25",
	url={https://doi.org/10.1007/978-3-031-33163-3_25},
	html={https://doi.org/10.1007/978-3-031-33163-3_25},
}
@conference{Bombarda2023d,
  	doi = {10.1145/3579028.3609017},
  	url = {https://doi.org/10.1145/3579028.3609017},
	html = {https://doi.org/10.1145/3579028.3609017},
  	year = {2023},
  	month = aug,
  	publisher = {{ACM}},
  	author = {Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini},
  	title = {On the Reuse of Existing Configurations for Testing Evolving Feature Models},
  	booktitle = {Proceedings of the 27th {ACM} International Systems and Software Product Line Conference - Volume B},
	abstract = {Software Product Lines (SPLs) are used for representing a variety of highly configurable systems or families of systems. They are commonly represented by feature models (FMs). Starting from FMs, configurations, used as test cases, can be generated to identify the products of interest for further activities. As the other types of software, SPLs and their FMs may evolve due to changing requirements or bug-fixing. However, no guidance is usually given on what to do with derived configurations when an FM evolves. The common approach is based on generating all configurations from scratch, which is not optimal since a greater effort is required for concretizing the new tests, and some of the old ones may be still applicable. In this paper, we present the use of a technique for generating combinatorial tests for evolving feature models: this technique incrementally builds the new combinatorial configuration set starting from the one generated from the previous model. Furthermore, we present a novel definition of dissimilarity among configuration sets that can be used to evaluate how much an evolved test suite differs from the previous one and thus allows evaluating the effort required for adapting old test cases to the new ones. Our experiments confirm that using the proposed technique, in general, leads to lower dissimilarity and test suite size w.r.t. the generation of tests from scratch.}
}
@Comment{jabref-meta: databaseType:bibtex;}
